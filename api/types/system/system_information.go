package system

// ----------------------------------------------------------------------------
// DO NOT EDIT THIS FILE
// This file was generated by `swagger generate operation`
//
// See hack/generate-swagger-api.sh
// ----------------------------------------------------------------------------

// PluginsInfo plugins info
// swagger:model PluginsInfo
type PluginsInfo struct {

	// The list of registered authorization plugins
	Authorization []string `json:"Authorization"`

	// The list of registered network plugins
	Network []string `json:"Network"`

	// The list of registered volume plugins
	Volume []string `json:"Volume"`
}

// SystemInformationOKBody system information o k body
// swagger:model SystemInformationOKBody
type SystemInformationOKBody struct {

	// architecture
	// Required: true
	Architecture string `json:"Architecture"`

	// containers
	// Required: true
	Containers int64 `json:"Containers"`

	// containers paused
	// Required: true
	ContainersPaused int64 `json:"ContainersPaused"`

	// containers running
	// Required: true
	ContainersRunning int64 `json:"ContainersRunning"`

	// containers stopped
	// Required: true
	ContainersStopped int64 `json:"ContainersStopped"`

	// Cpu cfs period
	// Required: true
	CPUCfsPeriod bool `json:"CpuCfsPeriod"`

	// Cpu cfs quota
	// Required: true
	CPUCfsQuota bool `json:"CpuCfsQuota"`

	// debug
	// Required: true
	Debug bool `json:"Debug"`

	// discovery backend
	// Required: true
	DiscoveryBackend string `json:"DiscoveryBackend"`

	// docker root dir
	// Required: true
	DockerRootDir string `json:"DockerRootDir"`

	// driver
	// Required: true
	Driver string `json:"Driver"`

	// driver status
	// Required: true
	DriverStatus [][]string `json:"DriverStatus"`

	// experimental build
	// Required: true
	ExperimentalBuild bool `json:"ExperimentalBuild"`

	// Http proxy
	// Required: true
	HTTPProxy string `json:"HttpProxy"`

	// Https proxy
	// Required: true
	HTTPSProxy string `json:"HttpsProxy"`

	// ID
	// Required: true
	ID string `json:"ID"`

	// ipv4 forwarding
	// Required: true
	IPV4Forwarding bool `json:"IPv4Forwarding"`

	// images
	// Required: true
	Images int64 `json:"Images"`

	// index server address
	// Required: true
	IndexServerAddress string `json:"IndexServerAddress"`

	// init path
	// Required: true
	InitPath string `json:"InitPath"`

	// init sha1
	// Required: true
	InitSha1 string `json:"InitSha1"`

	// kernel version
	// Required: true
	KernelVersion string `json:"KernelVersion"`

	// labels
	// Required: true
	Labels []string `json:"Labels"`

	// mem total
	// Required: true
	MemTotal int64 `json:"MemTotal"`

	// memory limit
	// Required: true
	MemoryLimit bool `json:"MemoryLimit"`

	// n CPU
	// Required: true
	NCPU int64 `json:"NCPU"`

	// n events listener
	// Required: true
	NEventsListener int64 `json:"NEventsListener"`

	// n fd
	// Required: true
	NFd int64 `json:"NFd"`

	// n goroutines
	// Required: true
	NGoroutines int64 `json:"NGoroutines"`

	// name
	// Required: true
	Name string `json:"Name"`

	// no proxy
	// Required: true
	NoProxy string `json:"NoProxy"`

	// o s type
	// Required: true
	OSType string `json:"OSType"`

	// oom kill disable
	// Required: true
	OomKillDisable bool `json:"OomKillDisable"`

	// oom score adj
	// Required: true
	OomScoreAdj int64 `json:"OomScoreAdj"`

	// operating system
	// Required: true
	OperatingSystem string `json:"OperatingSystem"`

	// plugins
	// Required: true
	Plugins PluginsInfo `json:"Plugins"`

	// registry config
	// Required: true
	RegistryConfig SystemInformationOKBodyRegistryConfig `json:"RegistryConfig"`

	// server version
	// Required: true
	ServerVersion string `json:"ServerVersion"`

	// swap limit
	// Required: true
	SwapLimit bool `json:"SwapLimit"`

	// system status
	// Required: true
	SystemStatus [][]string `json:"SystemStatus"`

	// system time
	// Required: true
	SystemTime string `json:"SystemTime"`
}

// SystemInformationOKBodyRegistryConfig system information o k body registry config
// swagger:model SystemInformationOKBodyRegistryConfig
type SystemInformationOKBodyRegistryConfig struct {

	// index configs
	IndexConfigs map[string]SystemInformationOKBodyRegistryConfigIndexConfigsAnon `json:"IndexConfigs,omitempty"`

	// insecure registry c ID rs
	InsecureRegistryCIDRs []string `json:"InsecureRegistryCIDRs"`
}

// SystemInformationOKBodyRegistryConfigIndexConfigsAnon system information o k body registry config index configs anon
// swagger:model SystemInformationOKBodyRegistryConfigIndexConfigsAnon
type SystemInformationOKBodyRegistryConfigIndexConfigsAnon struct {

	// mirrors
	Mirrors []string `json:"Mirrors"`

	// name
	Name string `json:"Name,omitempty"`

	// official
	Official bool `json:"Official,omitempty"`

	// secure
	Secure bool `json:"Secure,omitempty"`
}
