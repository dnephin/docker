{
    "swagger": 2.0,
    "info": {
        "title": "Docker Remote API",
        "description": "The API exposed by the Docker daemon",
        "version": "1.14"
    },
    "host": "localhost:8003",
    "schemes": [
        "http"
    ],
    "basePath": "/docker/v1.14",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/containers/json": {
            "get": {
                "summary": "List containers",
                "description": "List docker containers",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If True show all containers. Only running containers are shown by default.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the length of the response to this number of containers, include non-running containers.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Show only containers created after the container with this Id, include non-running containers.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Show only containers created before the container with this Id, include non-running containers.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Include the size of the container in the response",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "trunc_cmd",
                        "in": "query",
                        "description": "If True truncate the command string in the response to a fixed length",
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "Containers"
                ],
                "responses": {
                    "200": {
                        "description": "An array of summary imformation about all the containers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "ContainerSummary"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "ContainerSummary": {
            "properties": {
                "Id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "22c27d1b92f1b3437f687cf394af0c380d7c74237419d37a1087e11541f95cb3",
                    "description": "The unique container id"
                },
                "Image": {
                    "type": "string",
                    "format": "short-id",
                    "example": "f400ecd5746b",
                    "description": "The short id of the image"
                },
                "Command": {
                    "type": "string",
                    "description": "The command line of the container"
                },
                "Created": {
                    "type": "integer",
                    "format": "timestamp",
                    "description": "Timestamp of when the container was created"
                },
                "Status": {
                    "type": "string",
                    "description": "Human readable status of the container (Ex: \"Up 33 minutes)"
                },
                "Ports": {
                    "type": "array",
                    "description": "An array of ports exposed by the container",
                    "items": {
                        "$ref": "PortMapping"
                    }
                },
                "Names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of names for the container"
                },
                "SizeRootFs": {
                    "type": "integer",
                    "required": false
                },
                "SizeRw": {
                    "type": "integer",
                    "required": false
                }
            }
        },
        "PortMapping": {
            "properties": {
                "PrivatePort": {
                    "type": "integer",
                    "description": "The port number inside the docker container",
                    "required": true 
                },
                "Type": {
                    "type": "string",
                    "description": "Protocol name",
                    "example": "tcp",
                    "required": true 
                },
                "PublicPort": {
                    "type": "integer",
                    "description": "The port number on the host",
                    "required": false
                },
                "IP": {
                    "type": "string",
                    "format": "ip-address",
                    "description": "Ip address on the host",
                    "example": "0.0.0.0",
                    "required": false
                }
            }
        }
    }
}
